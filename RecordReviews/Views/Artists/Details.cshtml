@model RecordReviews.Models.Artist

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Artist</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.ArtistName)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.ArtistName)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.BirthPlace)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.BirthPlace)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Genre)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Genre)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.AvgRate)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.AvgRate)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.PageViews)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.PageViews)
        </dd>
    </dl>
</div>
<div>
    @if ((await AuthorizationService.AuthorizeAsync(
   User, Model,
   Operations.Update)).Succeeded)
    {
        <a class="text-muted" asp-action="Edit" asp-route-id="@Model.ArtistID">Edit</a>
        <text> | </text>
    }
    <a class="text-muted" asp-action="Index">Back to Artists</a>
</div>

<div>
    @if (Model.Status != ArtistStatus.Approved)
    {
        @if ((await AuthorizationService.AuthorizeAsync(
        User, Model, Operations.Approve)).Succeeded)
        {
            <form style="display:inline;" method="post">
                <input type="hidden" name="id" value="@Model.ArtistID" />
                <input type="hidden" name="status" value="@ArtistStatus.Approved" />
                <button type="submit" class="btn btn-xs btn-success">Approve</button>
            </form>
        }
    }

    @if (Model.Status != ArtistStatus.Rejected)
    {
        @if ((await AuthorizationService.AuthorizeAsync(
        User, Model, Operations.Reject)).Succeeded)
        {
            <form style="display:inline;" method="post">
                <input type="hidden" name="id" value="@Model.ArtistID" />
                <input type="hidden" name="status" value="@ArtistStatus.Rejected" />
                <button type="submit" class="btn btn-xs btn-danger">Reject</button>
            </form>
        }
    }
</div>