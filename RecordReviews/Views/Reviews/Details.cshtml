@model RecordReviews.Models.Review

@{
    ViewData["Title"] = "Details";
}
@using System.Globalization
<h1>Details</h1>

<div>
    <h4>Review</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Album)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Album.AlbumTitle)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Comment)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Comment)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Rate)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Rate)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.CreationTime)
        </dt>
        <dd class="col-sm-10">
            @{
                var time = Model.CreationTime.ToString("g", CultureInfo.CreateSpecificCulture("es-ES"));
            }
            @Html.DisplayFor(model => time)
        </dd>
    </dl>
</div>


<div>
    @if ((await AuthorizationService.AuthorizeAsync(
    User, Model,
    Operations.Update)).Succeeded)
    {
        <a class="text-muted" asp-action="Edit" asp-route-id="@Model.ReviewId">Edit</a>
        <text> | </text>
    }
    <a class="text-muted" asp-action="Index">Back to Reviews</a>
</div>

<div>
    @if (Model.Status != ReviewStatus.Approved)
    {
        @if ((await AuthorizationService.AuthorizeAsync(
       User, Model, Operations.Approve)).Succeeded)
        {
            <form style="display:inline;" method="post">
                <input type="hidden" name="id" value="@Model.ReviewId" />
                <input type="hidden" name="status" value="@ReviewStatus.Approved" />
                <button type="submit" class="btn btn-xs btn-success">Approve</button>
            </form>
        }
    }

    @if (Model.Status != ReviewStatus.Rejected)
    {
        @if ((await AuthorizationService.AuthorizeAsync(
       User, Model, Operations.Reject)).Succeeded)
        {
            <form style="display:inline;" method="post">
                <input type="hidden" name="id" value="@Model.ReviewId" />
                <input type="hidden" name="status" value="@ReviewStatus.Rejected" />
                <button type="submit" class="btn btn-xs btn-danger">Reject</button>
            </form>
        }
    }
</div>