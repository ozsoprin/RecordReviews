@model RecordReviews.Models.Search

@{
    ViewData["Title"] = "Search";

    //Album album1 = new Album();
    //album1.AlbumTitle = "Chances Are";
    //album1.ArtistName = "Bob Marley";
    //Album album2 = new Album();
    //album2.AlbumTitle = "This Is Acting";
    //album2.ArtistName = "Sia";
    //Album album3 = new Album();
    //album3.AlbumTitle = "25";
    //album3.ArtistName = "Adele";
    //Album album4 = new Album();
    //album4.AlbumTitle = "Unplugged";
    //album4.ArtistName = "Eric Clapton";
    //List<Album> list = new List<Album>();
    //list.Add(album1);
    //list.Add(album2);
    //list.Add(album3);
    //list.Add(album4);

    //TempData["Results"] = list;
    //TempData["type"] = "Album";
}
@using System.Globalization

<!--search section start-->
<section>
    <h2>Search</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                <label for="type" class="col-md-2">
                    <b>Search For:</b>
                </label>
                <div class="col-md-7">
                    <select class="form-control" id="type" name="type">
                        <option value="Album" selected>Albums</option>
                        <option value="Artist">Artists</option>
                        <option value="Review">Reviews</option>
                    </select>
                </div>
            </div>

            <div class="form-group">
                <label for="primaryName" class="col-md-7" id="primary-name">
                    <b>Album Title:</b>
                </label>
                <div class="col-md-7">
                    @Html.EditorFor(model => model.PrimaryKey, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PrimaryKey, null, new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group advanced-item advanced-album advanced-review" id="s-name">
                <label for="secondaryName" class="col-md-7" id="secondary-name">
                    <b>By Artist:</b>
                </label>
                <div class="col-md-7">
                    @Html.EditorFor(model => model.SecondaryKey, new { htmlAttributes = new { @class = "form-control advanced-input", id = "s-name-input" } })
                    @Html.ValidationMessageFor(model => model.SecondaryKey, null, new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" id="g">
                <label for="Genre" class="col-md-7" id="genre">
                    <b></b>
                </label>
                <div class="col-md-7">
                    @Html.EditorFor(model => model.Genre, new { htmlAttributes = new { @class = "form-control advanced-input", id = "g-input" } })
                    @Html.ValidationMessageFor(model => model.Genre, null, new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" id="a">
                <label for="ArtistName" class="col-md-7" id="artist">
                    <b></b>
                </label>
                <div class="col-md-7">
                    @Html.EditorFor(model => model.ArtistName, new { htmlAttributes = new { @class = "form-control advanced-input", id = "a-input" } })
                    @Html.ValidationMessageFor(model => model.ArtistName, null, new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group advanced-item advanced-artist advanced-album" id="g-c">
                <label for="Genre" class="col-md-7" id="genre-country">
                    <b>Genre:</b>
                </label>
                <div class="col-md-7">
                    @Html.EditorFor(model => model.Genre, new { htmlAttributes = new { @class = "form-control advanced-input", id = "g-c-input" } })
                    @Html.ValidationMessageFor(model => model.Genre, null, new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group advanced-item advanced-all">
                <div class="col-md-7" id="date-range-label">
                    <h6><b>Release Date Range:</b></h6>
                </div>
                <div class="row">
                    <div class="col-md-8">
                        <div class="form-inline">
                            <div class="col-md-5 mr-4">
                                @Html.EditorFor(model => model.MinDateTime, new { htmlAttributes = new { @class = "form-control advanced-input w-100", placeholder = "Starting from..." } })
                                @Html.ValidationMessageFor(model => model.MinDateTime, null, new { @class = "text-danger" })
                            </div>
                            <div class="col-md-5 mr-4">
                                @Html.EditorFor(model => model.MaxDateTime, new { htmlAttributes = new { @class = "form-control advanced-input w-100", placeholder = "Up to..." } })
                                @Html.ValidationMessageFor(model => model.MaxDateTime, null, new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-group advanced-item advanced-all">
                <h6><b class="col-md-7">Average Rate: </b></h6>
                <div class="row">
                    <div class="col-md-8">
                        <div class="form-inline">
                            <div class="col-md-5 mr-4">
                                @Html.EditorFor(model => model.MinRate, new { htmlAttributes = new { @class = "form-control advanced-input w-100", placeholder = "Starting from..." } })
                                @Html.ValidationMessageFor(model => model.MinRate, null, new { @class = "text-danger" })
                            </div>
                            <div class="col-md-5 mr-4">
                                @Html.EditorFor(model => model.MaxRate, new { htmlAttributes = new { @class = "form-control advanced-input w-100", placeholder = "Up to..." } })
                                @Html.ValidationMessageFor(model => model.MaxRate, null, new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>


            <div class="form-group">
                <div class="col-md-offset-2 col-md-7">
                    <input type="submit" value="Search" class="btn px-3 my-2 my-sm-0 " id="search-btn" />
                    <button type="button" class="btn" id="advanced-search-btn">
                        <span id="btn-val">Go To Advanced Search</span>
                    </button>
                </div>
            </div>
        </div>
    }
</section>
<!--search section end-->
<canvas id="myCanvas" width="1300" height="5" >
    Your browser does not support the HTML canvas tag.
</canvas>

<script>
    var c = document.getElementById("myCanvas");
    var ctx = c.getContext("2d");
    ctx.moveTo(0, 0);
    ctx.lineTo(1300, 0);
    ctx.stroke();
</script>
<!--results section start-->
<section class="mt-5">
    @{
        if (ViewBag.Type != null)
        {

            if (ViewBag.Results.Count == 0)
            {
                <h4>No Results</h4>
            }
            else
            {
                <h2>Results</h2>
                var type = (string)ViewBag.Type;
                if (type == "Artist")
                {
                    <div class="table-responsive-md">
                        <table class="table">
                            <thead>
                                <tr>
                                    <th scope="col">
                                        Artist's Name
                                    </th>
                                    <th scope="col">
                                        Genre
                                    </th>
                                    <th scope="col">
                                        Average Rate
                                    </th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in (List<Artist>)ViewBag.Results)
                                {
                                    <tr>
                                        <td>
                                            @item.ArtistName
                                        </td>
                                        <td>
                                            @item.Genre
                                        </td>
                                        <td>
                                            @item.AvgRate
                                        </td>
                                        <td>
                                            @if ((await AuthorizationService.AuthorizeAsync(
                                               User, item,
                                               Operations.Update)).Succeeded)
                                            {
                                                <a class="text-muted" asp-controller="Artists" asp-action="Edit" asp-route-id="@item.ArtistID">Edit</a>
                                                <text> | </text>
                                            }

                                            <a class="text-muted" asp-controller="Artists" asp-action="Details" asp-route-id="@item.ArtistID">Details</a>

                                            @if ((await AuthorizationService.AuthorizeAsync(
                                               User, item,
                                               Operations.Delete)).Succeeded)
                                            {
                                                <text> | </text>
                                                <a class="text-muted" asp-controller="Artists" asp-action="Delete" asp-route-id="@item.ArtistID">Delete</a>
                                            }
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
                else if (type == "Album")
                {
                    <div class="table-responsive-md">
                        <table class="table">
                            <thead>
                                <tr>
                                    <th scope="col">
                                        Album Title
                                    </th>
                                    <th scope="col">
                                        Artist's Name
                                    </th>
                                    <th scope="col">
                                        Release Date
                                    </th>
                                    <th scope="col">
                                        Genre
                                    </th>
                                    <th scope="col">
                                        Average Rate
                                    </th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in (List<Album>)ViewBag.Results)
                                {
                                    <tr>
                                        <td>
                                            @item.AlbumTitle
                                        </td>
                                        <td>
                                            @item.ArtistName
                                        </td>
                                        <td>
                                            @{
                                                var time = item.ReleaseDate.ToString("d", CultureInfo.CreateSpecificCulture("es-ES"));
                                            }
                                            @Html.DisplayFor(modelItem => time)
                                        </td>
                                        <td>
                                            @item.Genre
                                        </td>
                                        <td>
                                            @item.AvgRate
                                        </td>
                                        <td>
                                            @if ((await AuthorizationService.AuthorizeAsync(
                                              User, item,
                                              Operations.Update)).Succeeded)
                                            {
                                                <a class="text-muted" asp-controller="Albums" asp-action="Edit" asp-route-id="@item.AlbumId">Edit</a>
                                                <text> | </text>
                                            }

                                            <a class="text-muted" asp-controller="Albums" asp-action="Details" asp-route-id="@item.AlbumId">Details</a>

                                            @if ((await AuthorizationService.AuthorizeAsync(
                                              User, item,
                                              Operations.Delete)).Succeeded)
                                            {
                                                <text> | </text>
                                                <a class="text-muted" asp-controller="Albums" asp-action="Delete" asp-route-id="@item.AlbumId">Delete</a>
                                            }
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
                else
                {
                    <div class="table-responsive-md">
                        <table class="table">
                            <thead>
                                <tr>
                                    <th scope="col">
                                        Album
                                    </th>
                                    <th scope="col">
                                        Comment
                                    </th>
                                    <th scope="col">
                                        Rate
                                    </th>
                                    <th scope="col">
                                        Created on
                                    </th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in (List<Review>)ViewBag.Results)
                                {
                                    <tr>
                                        <td>
                                            @item.Album.AlbumTitle
                                        </td>
                                        <td>
                                            @item.Comment
                                        </td>
                                        <td>
                                            @item.Rate
                                        </td>
                                        <td>
                                            @{
                                                var time = item.CreationTime.ToString("g", CultureInfo.CreateSpecificCulture("es-ES"));
                                            }
                                            @Html.DisplayFor(modelItem => time)
                                        </td>
                                        <td>
                                            @if ((await AuthorizationService.AuthorizeAsync(
                                              User, item,
                                              Operations.Update)).Succeeded)
                                            {
                                                <a class="text-muted" asp-controller="Reviews" asp-action="Edit" asp-route-id="@item.ReviewId">Edit</a>
                                                <text> | </text>
                                            }

                                            <a class="text-muted" asp-controller="Reviews" asp-action="Details" asp-route-id="@item.ReviewId">Details</a>

                                            @if ((await AuthorizationService.AuthorizeAsync(
                                              User, item,
                                              Operations.Delete)).Succeeded)
                                            {
                                                <text> | </text>
                                                <a class="text-muted" asp-controller="Reviews" asp-action="Delete" asp-route-id="@item.ReviewId">Delete</a>
                                            }
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
            }
        }
    }
</section>
<!--results section end-->

@section Scripts
    {
    <script>
        $(document).ready(function () {
            $(".advanced-item").hide();
            $(".advanced-input").val(null);
            $("#g").hide();
            $("#a").hide();
        });
    </script>
    <script>
        $(document).ready(function () {
            $("#advanced-search-btn").click(function () {
                var selectedType = $("option:selected").val();
                if ($("#btn-val").html() === "Go To Normal Search") {
                    $("#g").hide();
                    $("#a").hide();
                    $(".advanced-item").hide();
                    $(".advanced-input").val(null);
                    switch (selectedType) {
                        case "Album":
                            $("#primary-name").html("<b>Album Title:</b>");
                            break;
                        case "Review":
                            $("#primary-name").html("<b>Album Title:</b>");
                            break;
                        case "Artist":
                            $("#primary-name").html("<b>Artist's Name:</b>");
                            break;
                        default:
                            break;
                    }
                    $("#btn-val").html("Go To Advanced Search");
                }
                else {
                    $(".advanced-input").val(null);
                    $(".advanced-item").hide();
                    $("#g").hide();
                    $("#a").hide();
                    switch (selectedType) {
                        case "Album":
                            $("#primary-name").html("<b>Album Title:</b>");
                            $("#secondary-name").html("<b>By Artist:</b>");
                            $("#genre-country").html("<b>Genre:</b>");
                            $("#date-range-label").html("<h6><b>Release Date Range:</b></h6>");
                            $(".advanced-album").show();
                            break;
                        case "Review":
                            $("#primary-name").html("<b>Album Title:</b>");
                            $("#secondary-name").html("<b>Written By:</b>");
                            $("#date-range-label").html("<h6><b>Creation Time Range:</b></h6>");
                            $("#artist").html("<h6><b>On Artist:</b></h6>");
                            $("#a").show();
                            $(".advanced-review").show();
                            break;
                        case "Artist":
                            $("#primary-name").html("<b>Artist's Name:</b>");
                            $("#genre-country").html("<b>Origin Country:</b>");
                            $("#date-range-label").html("<h6><b>Years Active:</b></h6>");
                            $("#genre").html("<h6><b>Genre:</b></h6>");
                            $("#g").show();
                            $(".advanced-artist").show();
                            break;
                        default:
                            break;
                    }
                    $(".advanced-all").show();
                    $("#btn-val").html("Go To Normal Search");
                }
            });
        });
    </script>
    <script>
        $(document).ready(function () {
            $("select#type").change(function () {
                var selectedType = $(this).children("option:selected").val();
                var isAdvanced = $("#btn-val").html() === "Go To Normal Search";
                if (isAdvanced) {
                    $("#g").hide();
                    $("#a").hide();
                    $(".advanced-item").hide();
                    switch (selectedType) {
                        case "Album":
                            $("#primary-name").html("<b>Album Title:</b>");
                            $("#secondary-name").html("<b>By Artist:</b>");
                            $("#genre-country").html("<b>Genre:</b>");
                            $("#date-range-label").html("<h6><b>Release Date Range:</b></h6>");
                            $(".advanced-album").show();
                            break;
                        case "Artist":
                            $("#primary-name").html("<b>Artist's Name:</b>");
                            $("#genre-country").html("<b>Origin Country:</b>");
                            $("#date-range-label").html("<h6><b>Years Active:</b></h6>");
                            $("#genre").html("<h6><b>Genre:</b></h6>");
                            $("#g").show();
                            $(".advanced-artist").show();
                            break;
                        case "Review":
                            $("#primary-name").html("<b>Album Title:</b>");
                            $("#secondary-name").html("<b>Written By:</b>");
                            $("#date-range-label").html("<h6><b>Creation Time Range:</b></h6>");
                            $("#artist").html("<h6><b>On Artist:</b></h6>");
                            $("#a").show();
                            $(".advanced-review").show();
                            break;
                        default:
                    }
                    $(".advanced-all").show();
                } else {
                    $(".advanced-item").hide();
                    $("#g").hide();
                    $("#a").hide();
                    switch (selectedType) {
                        case "Album":
                        case "Review":
                            $("#primary-name").html("<b>Album Title:</b>");
                            break;
                        case "Artist":
                            $("#primary-name").html("<b>Artist's Name:</b>");
                            break;
                        default:
                    }
                }
            });
        });
    </script>
}




