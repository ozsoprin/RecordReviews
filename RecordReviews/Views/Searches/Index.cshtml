@model RecordReviews.Models.Search

@{
    ViewData["Title"] = "Search";
}

<section>
    <h2>Search</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                <label for="type" class="col-md-2">
                    <b>Search For:</b>
                </label>
                <div class="col-md-7">
                    <select class="form-control" id="type" name="type">
                        <option value="Album" selected>Albums</option>
                        <option value="Artist">Artists</option>
                        <option value="Review">Reviews</option>
                    </select>
                </div>
            </div>

            <div class="form-group">
                <label for="primaryName" class="col-md-7" id="primary-name">
                    <b>Album Title:</b>
                </label>
                <div class="col-md-7">
                    @Html.EditorFor(model => model.PrimaryKey, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PrimaryKey, null, new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group advanced-item advanced-album advanced-review" id="s-name">
                <label for="secondaryName" class="col-md-7" id="secondary-name">
                    <b>By Artist:</b>
                </label>
                <div class="col-md-7">
                    @Html.EditorFor(model => model.SecondaryKey, new { htmlAttributes = new { @class = "form-control advanced-input", id = "s-name-input" } })
                    @Html.ValidationMessageFor(model => model.SecondaryKey, null, new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group advanced-item advanced-artist advanced-album" id="g-c">
                <label for="GenreCountry" class="col-md-7" id="genre-country">
                    <b>Genre:</b>
                </label>
                <div class="col-md-7">
                    @Html.EditorFor(model => model.GenreCountry, new { htmlAttributes = new { @class = "form-control advanced-input", id = "g-c-input" } })
                    @Html.ValidationMessageFor(model => model.GenreCountry, null, new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group advanced-item advanced-all">
                <div class="col-md-7" id="date-range-label">
                    <h6><b>Release Date Range:</b></h6>
                </div>
                <div class="row">
                    <div class="col-md-8">
                        <div class="form-inline">
                            <div class="col-md-5 mr-4">
                                @Html.EditorFor(model => model.MinDateTime, new { htmlAttributes = new { @class = "form-control advanced-input w-100", placeholder = "Starting from..." } })
                                @Html.ValidationMessageFor(model => model.MinDateTime, null, new { @class = "text-danger" })
                            </div>
                            <div class="col-md-5 mr-4">
                                @Html.EditorFor(model => model.MaxDateTime, new { htmlAttributes = new { @class = "form-control advanced-input w-100", placeholder = "Up to..." } })
                                @Html.ValidationMessageFor(model => model.MaxDateTime, null, new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-group advanced-item advanced-all">
                <h6><b class="col-md-7">Average Rate: </b></h6>
                <div class="row">
                    <div class="col-md-8">
                        <div class="form-inline">
                            <div class="col-md-5 mr-4">
                                @Html.EditorFor(model => model.MinRate, new { htmlAttributes = new { @class = "form-control advanced-input w-100", placeholder = "Starting from..." } })
                                @Html.ValidationMessageFor(model => model.MinRate, null, new { @class = "text-danger" })
                            </div>
                            <div class="col-md-5 mr-4">
                                @Html.EditorFor(model => model.MaxRate, new { htmlAttributes = new { @class = "form-control advanced-input w-100", placeholder = "Up to..." } })
                                @Html.ValidationMessageFor(model => model.MaxRate, null, new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>


            <div class="form-group">
                <div class="col-md-offset-2 col-md-7">
                    <input type="submit" value="Search" class="btn" id="search-btn" />
                    <button type="button" class="btn" id="advanced-search-btn">
                        <span id="btn-val">Go To Advanced Search</span>
                    </button>
                </div>
            </div>
        </div>
    }
</section>

@section Scripts
{
    <script>
        $(document).ready(function() {
            $(".advanced-item").hide();
            $(".advanced-input").val(null);
        });
    </script>
    <script>
        $(document).ready(function() {
            $("#advanced-search-btn").click(function() {
                var selectedType = $("option:selected").val();
                if ($("#btn-val").html() === "Go To Normal Search")
                {
                    $(".advanced-item").hide();
                    $(".advanced-input").val(null);
                    switch (selectedType) {
                        case "Album":
                            $("#primary-name").html("<b>Album Title:</b>");
                            break;
                        case "Review":
                            $("#primary-name").html("<b>Album Title:</b>");
                            break;
                        case "Artist":
                            $("#primary-name").html("<b>Artist's Name:</b>");
                            break;
                        default:
                                break;
                    }
                    $("#btn-val").html("Go To Advanced Search");
                }
                else
                {
                    $(".advanced-input").val(null);
                    $(".advanced-item").hide();
                    switch (selectedType) {
                    case "Album":
                        $("#primary-name").html("<b>Album Title:</b>");
                        $("#secondary-name").html("<b>By Artist:</b>");
                        $("#genre-country").html("<b>Genre:</b>");
                        $("#date-range-label").html("<h6><b>Release Date Range:</b></h6>");
                        $(".advanced-album").show();
                        break;
                    case "Review":
                        $("#primary-name").html("<b>Album Title:</b>");
                        $("#secondary-name").html("<b>Written By:</b>");
                        $("#date-range-label").html("<h6><b>Creation Time Range:</b></h6>");
                        break;
                    case "Artist":
                        $("#primary-name").html("<b>Artist's Name:</b>");
                        $("#genre-country").html("<b>Origin Country:</b>");
                        $("#date-range-label").html("<h6><b>Years Active:</b></h6>");
                        $(".advanced-artist").show();
                        break;
                    default:
                        break;
                    }
                    $(".advanced-all").show();
                    $("#btn-val").html("Go To Normal Search");
                }
            });
        });
    </script>
    <script>
        $(document).ready(function() {
            $("select#type").change(function() {
                var selectedType = $(this).children("option:selected").val();
                var isAdvanced = $("#btn-val").html() === "Go To Normal Search";
                if (isAdvanced) {
                    $(".advanced-item").hide();
                    switch (selectedType) {
                    case "Album":
                        $("#primary-name").html("<b>Album Title:</b>");
                        $("#secondary-name").html("<b>By Artist:</b>");
                        $("#genre-country").html("<b>Genre:</b>");
                        $("#date-range-label").html("<h6><b>Release Date Range:</b></h6>");
                        $(".advanced-album").show();
                        break;
                    case "Artist":
                        $("#primary-name").html("<b>Artist's Name:</b>");
                        $("#genre-country").html("<b>Origin Country:</b>");
                        $("#date-range-label").html("<h6><b>Years Active:</b></h6>");
                        $(".advanced-artist").show();
                        break;
                    case "Review":
                        $("#primary-name").html("<b>Album Title:</b>");
                        $("#secondary-name").html("<b>Written By:</b>");
                        $("#date-range-label").html("<h6><b>Creation Time Range:</b></h6>");
                        $(".advanced-review").show();
                        break;
                    default:
                    }
                    $(".advanced-all").show();
                } else {
                    $(".advanced-item").hide();
                    switch (selectedType) {
                    case "Album":
                    case "Review":
                        $("#primary-name").html("<b>Album Title:</b>");
                        break;
                    case "Artist":
                        $("#primary-name").html("<b>Artist's Name:</b>");
                        break;
                    default:
                    }
                }
            });
        });
    </script>
}











@*<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.PrimaryKey)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SecondaryKey)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.MinRate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.MaxRate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.GenreCountry)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.MaxDateTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.MinDateTime)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.PrimaryKey)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SecondaryKey)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MinRate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MaxRate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.GenreCountry)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MaxDateTime)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MinDateTime)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.type">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.type">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.type">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>*@
