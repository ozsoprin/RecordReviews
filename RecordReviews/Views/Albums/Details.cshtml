@model RecordReviews.Models.Album

@{
    ViewData["Title"] = "Album";
}

@using System.Globalization

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
<script>
    async function creatAlbumImg(element) {
        var LastFmKey = "4a06f33fa225792783b9c7c2e6b9fde6";
        var artist = $(element).attr('alt');
        var title = $(element).attr('title');
        var url = encodeURI("https://ws.audioscrobbler.com/2.0/?method=album.getinfo&api_key="
            + LastFmKey + "&artist=" + artist + "&album=" + title + "&autocorrect=1&format=json");
        $.getJSON(url,
            function (json) {
                //var i = Math.floor(Math.random() * 10) % 10;
                var src = json.album.image[4]["#text"];
                $(element).attr("src", src);
            });
    }
</script>


<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script>
    function getBioAlbum() {
        var LastFmKey = "4a06f33fa225792783b9c7c2e6b9fde6";
        var artist = $("#bio").attr('alt');
        var title = $("#bio").attr('title');

        $.getJSON("https://ws.audioscrobbler.com/2.0/?method=album.getinfo&artist=" +
            artist +
            "&album=" +
            title +
            "&api_key=" +
            LastFmKey +
            "&autocorrect=1&format=json",
            function (json) {
                var summary = json.album.wiki != null ? json.album.wiki.summary : "The Synopsis for this Album is Unavailable on Last.Fm";
                $("#bio").html(summary);
            });
    }
</script>

@*<script>
        function getVideo() {
            var artist = $(".youtube-video").attr('alt');
            var title = $(".youtube-video").attr('title');
            var keyword = title + " " + artist;
            var GoogleKey = 'AIzaSyD54My_EKJRdnOMUu4w1Pwv7cxaoovMs5c';
            var url = encodeURI("https://www.googleapis.com/youtube/v3/search?part=snippet&maxResults=1&type=video&q=" +
                keyword +
                "&key=" +
                GoogleKey);
            $.getJSON(url,
                function (json) {
                    var videoId = json.items[0].id.videoId;
                    var embed = "https://www.youtube.com/embed/" + videoId;

                    var iframe = "<iframe width='450px' height='293px' src='" +
                        embed +
                        "' frameborder='0' allow='accelerometer; autoplay; encrrypted-media; gyroscope; picture-in-picture' allowfullscreen></iframe>";

                    $(".youtube-video").html(iframe);
                });

        }
    </script>*@
<script>
    function strPadLeft(string, padding, length) {
        return (new Array(length + 1).join(padding) + string).slice(-length);
    }
</script>
<script>
    function secondsToTime(seconds) {
        var minutes = Math.floor(seconds / 60);
        return "" + Math.floor(seconds / 60) + ":" + strPadLeft(seconds - minutes * 60, "0", 2);
    }
</script>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
<script>
    function getTracks() {
        var LastFmKey = "4a06f33fa225792783b9c7c2e6b9fde6";
        var artist = $("#tracklist").attr('alt');
        var title = $("#tracklist").attr('title');
        console.log(artist);
        console.log(title);

        var util = { sum: 0 };

        $.getJSON("https://ws.audioscrobbler.com/2.0/?method=album.getinfo&artist=" +
            artist +
            "&album=" +
            title +
            "&api_key=" +
            LastFmKey +
            "&autocorrect=1&format=json",
            function (json) {
                if (json.album.tracks.track.length != 0) {
                    $("#reviews-full").hide();
                    json.album.tracks.track.forEach(function (song) {
                        this.sum += Number(song.duration);
                        $("#tracklist").append("<tr><td>" + song.name + "</td><td>" + secondsToTime(song.duration) + "</td></tr>");
                    }, util);
                    $("#totalDuration").append("<tr class=table-secondary><td><b>Total Duration<b></td>" +
                        "<td>" +
                        "<b>" +
                        secondsToTime(util.sum) +
                        "</b>" +
                        "</td>" +
                        "</tr>");
                }

                else {
                    $("#tracks-aside").hide();
                    $("#reviews-aside").hide();
                }
            });
    }

</script>


<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
<script>
    async function creatArtistImg(element) {
        var LastFmKey = "4a06f33fa225792783b9c7c2e6b9fde6";
        var name = $(element).attr('alt');
        var url = await encodeURI("https://ws.audioscrobbler.com/2.0/?method=artist.gettopalbums&artist=" +
            name +
            "&api_key=" +
            LastFmKey +
            "&autocorrect=1&limit=10&format=json");
        $.getJSON(url,
            function (json) {
                //var i = Math.floor(Math.random() * 10) % 10;
                var src = json.topalbums.album[1].image[3]["#text"];
                $(element).attr("src", src);
            });
    }
</script>

<script>
    $(document).ready(async function () {
        $(".albumImg").each(async function (index, element) {
            await creatAlbumImg(element);
        });
        getBioAlbum();
        //getVideo();
        getTracks();
    });
</script>

<div class="row mt-5">
    <div class="col-md-5 mt-3" style="margin: auto;">
        <div class="mb-5 mr-4">
            <img class="albumImg shadow" alt="@Model.ArtistName" title="@Model.AlbumTitle" src=""
                 data-holder-rendered="true">
        </div>

    </div>
    <div class="col-md-5 mt-3">
        <div>
            <h1 class="font-weight-bold">@Model.AlbumTitle </h1>
            <h2><a class="font-weight-bold text-muted" asp-controller="Artists" asp-action="Details" asp-route-id="@Model.ArtistId">@Model.ArtistName</a></h2>
        </div>
        <div class="row">
            <div class="col-md-6 mt-4">
                <h3 class="font-weight-bold">Genre</h3>
                <h3 class="font-weight-bold">Rated</h3>
                <h3 class="font-weight-bold">Release Date</h3>
            </div>
            <div class="col-md-6 mt-4">
                <h3>@Model.Genre</h3>
                <h3>@Model.AvgRate</h3>
                @{
                    var time = Model.ReleaseDate.ToString("d", CultureInfo.CreateSpecificCulture("es-ES"));
                }
                <h3>@time</h3>
            </div>
        </div>
    </div>
</div>

<div class="row mb-5">
    <div class="col-md-7 mt-5" id="bio" alt="@Model.ArtistName" title="@Model.AlbumTitle"></div>
    <div class="youtube-video col-md-4 w-100" alt="@Model.ArtistName" title="@Model.AlbumTitle"></div>
</div>

<aside id="tracks-aside">
    <h2 class="font-weight-bold mb-5">Track List</h2>
    <section>
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>Track Name</th>
                    <th>Length</th>
                </tr>
            </thead>
            <tbody id="tracklist" alt="@Model.ArtistName" title="@Model.AlbumTitle"></tbody>
            <tfoot id="totalDuration"></tfoot>
        </table>
    </section>
</aside>

@if (ViewBag.AlbumReviews.Count != 0)
{
    <div id="reviews-aside">
        <h2 class="font-weight-bold mb-5">Reviews</h2>
        <div class="table-responsive-md">
            <table class="table col-md-6">
                <thead>
                    <tr>
                        <th scope="col">
                            Comment
                        </th>
                        <th scope="col">
                            Rate
                        </th>
                        <th scope="col">
                            Created on
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @for (var i = 0; i < 5; i++)
                    {
                        <tr>
                            <td>
                                @ViewBag.AlbumReviews[i].Comment
                            </td>
                            <td>
                                @ViewBag.AlbumReviews[i].Rate
                            </td>
                            <td>
                                @{
                                    var t = ViewBag.AlbumReviews[i].CreationTime.ToString("d", CultureInfo.CreateSpecificCulture("es-ES"));
                                }
                                @t
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    <div id="reviews-full">
        <h2 class="font-weight-bold mb-5">Reviews</h2>
        <div class="table-responsive-md">
            <table class="table col-md-12">
                <thead>
                    <tr>
                        <th scope="col">
                            Comment
                        </th>
                        <th scope="col">
                            Rate
                        </th>
                        <th scope="col">
                            Created on
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @for (var i = 0; i < 5; i++)
                    {
                        <tr>
                            <td>
                                @ViewBag.AlbumReviews[i].Comment
                            </td>
                            <td>
                                @ViewBag.AlbumReviews[i].Rate
                            </td>
                            <td>
                                @{
                                    var t = ViewBag.AlbumReviews[i].CreationTime.ToString("d", CultureInfo.CreateSpecificCulture("es-ES"));
                                }
                                @t
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
}

@if (ViewBag.AlbumYouMightLike.Count != 0)
{
    <div class="col-md-6">
        <h2 class="font-weight-bold mb-5 mt-5">Albums You Might Like</h2>
        <div class="row mt-5 mb-5">
            @for (var i = 0; i < 2; i++)
            {
                <div class="col-md-6">
                    <div class="mb-5 mr-4">
                        <a class="img-link" asp-controller="Albums" asp-action="Details" asp-route-id="@ViewBag.AlbumYouMightLike[i].AlbumId">
                            <img class="albumImg w-100 mb-2 shadow" alt="@ViewBag.AlbumYouMightLike[i].ArtistName" title="@ViewBag.AlbumYouMightLike[i].AlbumTitle" src=""
                                 data-holder-rendered="true">
                        </a>
                        <a class="font-weight-bold text-decoration-none text-dark" asp-controller="Albums" asp-action="Details" asp-route-id="@ViewBag.AlbumYouMightLike[i].AlbumId">@ViewBag.AlbumYouMightLike[i].AlbumTitle</a><br />
                        <a class="min-font-muted font-weight-bold text-muted" asp-controller="Artists" asp-action="Details" asp-route-id="@ViewBag.AlbumYouMightLike[i].ArtistId">@ViewBag.AlbumYouMightLike[i].ArtistName</a>
                    </div>
                </div>
            }
        </div>
    </div>
}


<div>
    @if ((await AuthorizationService.AuthorizeAsync(
User, Model,
Operations.Update)).Succeeded)
    {
        <a class="text-muted" asp-action="Edit" asp-route-id="@Model.AlbumId">Edit</a>
        <text> | </text>
    }
    <a class="text-muted" asp-action="Index">Back to Albums</a>
</div>

<div>
    @if (Model.Status != AlbumStatus.Approved)
    {
        @if ((await AuthorizationService.AuthorizeAsync(
              User, Model, Operations.Approve)).Succeeded)
        {
            <form style="display:inline;" method="post">
                <input type="hidden" name="id" value="@Model.AlbumId" />
                <input type="hidden" name="status" value="@AlbumStatus.Approved" />
                <button type="submit" class="btn btn-xs btn-success">Approve</button>
            </form>
        }
    }

    @if (Model.Status != AlbumStatus.Rejected)
    {
        @if ((await AuthorizationService.AuthorizeAsync(
              User, Model, Operations.Reject)).Succeeded)
        {
            <form style="display:inline;" method="post">
                <input type="hidden" name="id" value="@Model.AlbumId" />
                <input type="hidden" name="status" value="@AlbumStatus.Rejected" />
                <button type="submit" class="btn btn-xs btn-danger">Reject</button>
            </form>
        }
    }
</div>
